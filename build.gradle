buildscript {
    repositories {
        mavenCentral()
//        mavenLocal()
//        jcenter()
        maven {
            url "http://plugins.gradle.org/m2/"
        }
        maven {
            url "http://jcenter.bintray.com"
        }
        //maven { url "https://oss.sonatype.org/content/groups/public/" }

    }
    dependencies {
//        classpath 'com.kncept.junit5.reporter:junit-reporter:1.0.0'
//        classpath 'org.junit.platform:junit-platform-gradle-plugin:1.1.0-M1'
        classpath "com.github.ben-manes:gradle-versions-plugin:0.17.0"
        classpath "com.github.jengelman.gradle.plugins:shadow:2.0.1"
	//classpath "com.gradle:build-scan-plugin:1.10.2"

    }
}


//plugins {
//    id "org.sonarqube" version "2.5"
//}

/*
buildScan {
    licenseAgreementUrl = 'http://gradle.com/terms-of-service'
    licenseAgree = 'yes'
}
*/

allprojects {
    group = 'narchy'
    version = '1.0'
}

subprojects {
    apply plugin: 'idea'
    apply plugin: 'java'
    apply plugin: "com.github.ben-manes.versions"

//    apply plugin: 'org.junit.platform.gradle.plugin'

    repositories {

        mavenCentral()
//        mavenLocal()
//        jcenter()

        maven { url "http://repo.maven.apache.org/maven2" }
        maven { url "http://jcenter.bintray.com" }
//        maven { url "http://oss.sonatype.org/content/repositories/snapshots" }
    }

    sourceCompatibility = 1.9
    targetCompatibility = 1.9
    tasks.withType(JavaCompile) {
        options.encoding = 'UTF-8'
        options.incremental = true // one flag, and things will get MUCH faster
        options.fork = true
    }

    test {
        reports {
            junitXml.enabled = false
            html.enabled = true
        }
    }

//    junitHtmlReport {
//        //https://github.com/kncept/junit-reporter
//        // If true, then instead of producing multiple reports per test folder (test run),
//        // aggregate them all together into the test-reports root directory.
//        //
//        // Also use this if all your test results end up directly in the test-results directory
//        aggregated = true
//
//        //RAG status css overrides
//        cssRed = 'red'
//        cssAmber = 'orange'
//        cssGreen = 'green'
//    }
}
