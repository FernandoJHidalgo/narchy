//conjunction/disjunction structural decomposition

  //Conjunction structural decompose: C = (&&,a,b,..)
    C, X,              eventOf(C,X)     |-   conjWithout(C,X), (Belief:StructuralDeduction, Time:TaskSubSequence)
    C, X, --is(X,"#"), eventOf(C,X)     |-   X, (Belief:StructuralDeduction, Time:TaskSubEventPos)
    C, X, --is(X,"#"), eventOf(C,X)     |-   X, (  Goal:StructuralDeduction, Time:TaskSubEventPos)
    C, X,              eventOfNeg(C,X)  |-   conjWithout(C,--X), (Belief:StructuralDeduction, Time:TaskSubSequence)
    C, X, --is(X,"#"), eventOfNeg(C,X)  |- --X, (Belief:StructuralDeduction, Time:TaskSubEventNeg)
    C, X, --is(X,"#"), eventOfNeg(C,X)  |- --X, (  Goal:StructuralDeduction, Time:TaskSubEventNeg)


    //antigoal in sequence
    //X, C, eventOfNeg(C,X) |- --C, (Goal:DesireWeak, Time:TaskInBelief)
    X, C, eventOfNeg(C,X) |- --conjWithout(C,--X), (Goal:DesireWeak, Time:BeliefSubSequence)
    //X, C, eventOf(C,X)    |- --C, (Goal:DesireWeakN, Time:TaskInBelief)
    X, C, eventOf(C,X)    |- --conjWithout(C,X), (Goal:DesireWeakN, Time:BeliefSubSequence)

    //D, X, --is(X,"#"),                     eventOf(D,X)     |- --X,  (Belief:StructuralDeductionWeakN, Time:TaskSubEventPos)
    //D, X, --is(X,"#"),conjSimultaneous(D), eventOf(D,X)     |- --X,  (  Goal:StructuralDeductionWeakN, Time:TaskSubEventPos)
    //D, X, --is(X,"#"),                     eventOfNeg(D,X)  |-   X,  (Belief:StructuralDeductionWeakN, Time:TaskSubEventNeg)
    //D, X, --is(X,"#"),conjSimultaneous(D), eventOfNeg(D,X)  |-   X,  (  Goal:StructuralDeductionWeakN, Time:TaskSubEventNeg)



    //see: https://en.wikipedia.org/wiki/Imperative_logic#Ross.27_Paradox


    //X is the desired outcome. C is a sequence ending in it.  this forms a goal of the sequence minus the trailing
    //  filters to prevent deriving anti-goal if it appears in the precondition, was called: "conjDropIfLatestFiltered"
    X, C, eventOf(C,X)    |- conjDropIfLatest(C,  X), (Goal:Deduction,Time:TaskInBelief)
    X, C, eventOfNeg(C,X) |- conjDropIfLatest(C,--X), (Goal:DeductionN,Time:TaskInBelief)

    C, X, eventOf(C,X)    |- conjDropIfEarliest(C,  X), (Belief:Deduction,Goal:Deduction,Time:BeliefInTask)
    C, X, eventOfNeg(C,X) |- conjDropIfEarliest(C,--X), (Belief:DeductionPN,Goal:DeductionPN,Time:BeliefInTask)

    //conditional disjunction decompose
    D, X, eventOfNeg(D,X) |- --conjWithout(D,--X), (Goal:DeductionNN,Time:BeliefInTask)
    D, X, eventOf(D,X)    |- --conjWithout(D,  X), (Goal:DeductionNP,Time:BeliefInTask)



          //Disjunction structural decompose: D = (||,a,b,..) = --(&&,--a, --b, ..)
          //   disabled: may be spam-like
            //D, X,conjSimultaneous(D),  eventOfNeg(D,X)  |- --conjWithout(D,--X), (Belief:StructuralDeductionWeakN, Goal:StructuralDeductionWeakN)
            //D, X,conjSimultaneous(D),  eventOf(D,X)     |- --conjWithout(D,X), (Belief:StructuralDeductionWeakN, Goal:StructuralDeductionWeakN)


