//General Induction and Temporal Induction
//  When P and then S happened according to an observation, by induction (weak) it may be that alyways after P, usually S happens.
//      According to reductions: For implications, the predicate may be allowed an implication, but not subject

//TODO maybe allow equality in neqAndCom cases but only if the events differ in time

//==> f
    B, A, time(raw), task(positive), task("."), time(dtEvents),                             notImpl(A) |- (A ==>+- B), (Belief:Induction)
    B, A, time(raw), task(positive), task("."), time(dtEventsOrEternals), neqAndCom(A,B),     notImpl(A),notImpl(B) |- varIntro((A ==>+- B)), (Belief:Induction)
        B, A, time(raw), task(negative), task("."), time(dtEvents),                          notImpl(A) |- ((--,%A) ==>+- B), (Belief:InductionN)
        B, A, time(raw), task(negative), task("."), time(dtEventsOrEternals), neqAndCom(A,B), notImpl(A),notImpl(B) |- varIntro(((--,%A) ==>+- B)), (Belief:InductionN)

    B, A, time(raw), belief(positive), task("."), time(dtEvents),                                notImpl(B) |- (B ==>+- A), (Belief:Abduction)
    B, A, time(raw), belief(positive), task("."), time(dtEventsOrEternals), neqAndCom(A,B),       notImpl(A),notImpl(B) |- varIntro((B ==>+- A)), (Belief:Abduction)
        B, A, time(raw), belief(negative), task("."), time(dtEvents),                            notImpl(B) |- ((--,%B) ==>+- A), (Belief:AbductionPN)
        B, A, time(raw), belief(negative), task("."), time(dtEventsOrEternals), neqAndCom(A,B),   notImpl(A),notImpl(B) |- varIntro(((--,%B) ==>+- A)), (Belief:AbductionPN)



//&&
    A, B, task("."), time(raw), time(dtEvents)                                                  |- (polarize(A,task) &&+- polarize(B,belief)), (Belief:IntersectionDepolarized)
    A, B, task("."), time(raw), time(dtEventsOrEternals), neqAndCom(A,B), notImpl(A),notImpl(B)   |- varIntro((polarize(A,task) &&+- polarize(B,belief))), (Belief:IntersectionDepolarized)

//NAL3 difference
//    A, B, task("."), time(raw), neq(A,B), time(dtEventsOrEternals) |- (A - B), (Belief:Difference)



    //S || P: //should be covered more accurataely by the above cases
    //S, P, time(raw), time(dtAfter), task("."), neqCom(P,S) |- (--,((--,%S) &&+- (--,%P))), (Belief:Union)
    //S, P, time(raw), time(dtEventsOrEternals), task("."), neqAndCom(P,S) |- (--,varIntro(((--,%S) &&+- (--,%P)))), (Belief:Union)


//backward temporal induction
//    (A ==> B), A, time(raw), time(decomposeTask), task("?") |- B, (Punctuation:Question)
//    ((--,%A) ==> B), A, time(raw), time(decomposeTask), task("?") |- B, (Punctuation:Question)
//    (A ==> B), B, time(raw), time(decomposeTask), task("?") |- A, (Punctuation:Question)
    //(A <=> B), A, time(raw), time(decomposeTask), task("?") |- B, (Punctuation:Question)
