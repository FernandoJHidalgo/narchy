//General Induction and Temporal Induction
//  When P and then S happened according to an observation, by induction (weak) it may be that alyways after P, usually S happens.
//      According to reductions: For implications, the predicate may be allowed an implication, but not subject


//    A, B, after(Task,Belief),  |- ((&/,B,I) =/> A), (Truth:Induction),
//                                   (A =\> (&/,B,I)), (Truth:Abduction),
//                                   ((&/,B,I) </> A), (Truth:Comparison),
//                                  (&/,B,I,A), (Truth:Intersection)

    //B=before, A=after
//    B, A, time(raw), task("."), time(dtEvents)                          notImpl(B) |- (B ==>+- A), (Belief:Abduction)
//    B, A, time(raw), task("."), time(dtEventsOrEternals), neqAndCom(A,B),         notImpl(B) |- varIntro((B ==>+- A)), (Belief:Abduction)
//    B, A, time(raw), task("."), time(dtEvents)                       notImpl(A) |- (A ==>+- B), (Belief:Induction)
//    B, A, time(raw), task("."), time(dtEventsOrEternals), neqAndCom(A,B),       notImpl(A) |- varIntro((A ==>+- B)), (Belief:Induction)

    B, A, time(raw), task("."), time(dtEvents), notImpl(B) |- (B ==>+- A), (Belief:Abduction)
    B, A, time(raw), task("."), time(dtEventsOrEternals), neqAndCom(A,B),         notImpl(B) |- varIntro((B ==>+- A)), (Belief:Abduction)
        B, A, time(raw), task("."), time(dtEvents), notImpl(B) |- (--B ==>+- A), (Belief:AbductionN)
        B, A, time(raw), task("."), time(dtEventsOrEternals), neqAndCom(A,B),     notImpl(B) |- varIntro((--B ==>+- A)), (Belief:AbductionN)
    B, A, time(raw), task("."), time(dtEvents),  notImpl(A) |- (A ==>+- B), (Belief:Induction)
    B, A, time(raw), task("."), time(dtEventsOrEternals), neqAndCom(A,B),       notImpl(A) |- varIntro((A ==>+- B)), (Belief:Induction)
        B, A, time(raw), task("."), time(dtEvents), notImpl(A) |- (--A ==>+- B), (Belief:InductionPN)
        B, A, time(raw), task("."), time(dtEventsOrEternals), neqAndCom(A,B),   notImpl(A) |- varIntro((--A ==>+- B)), (Belief:InductionPN)

//    B, A, time(raw), task(positive), task("."), time(dtEvents), notImpl(B) |- (B ==>+- A), (Belief:Abduction)
//    B, A, time(raw), task(positive), task("."), time(dtEventsOrEternals), neqAndCom(A,B),         notImpl(B) |- varIntro((B ==>+- A)), (Belief:Abduction)
//        B, A, time(raw), task(negative), task("."), time(dtEvents), notImpl(B) |- (--B ==>+- A), (Belief:AbductionN)
//        B, A, time(raw), task(negative), task("."), time(dtEventsOrEternals), neqAndCom(A,B),     notImpl(B) |- varIntro((--B ==>+- A)), (Belief:AbductionN)
//    B, A, time(raw), belief(positive), task("."), time(dtEvents),  notImpl(A) |- (A ==>+- B), (Belief:Induction)
//    B, A, time(raw), belief(positive), task("."), time(dtEventsOrEternals), neqAndCom(A,B),       notImpl(A) |- varIntro((A ==>+- B)), (Belief:Induction)
//        B, A, time(raw), belief(negative), task("."), time(dtEvents), notImpl(A) |- (--A ==>+- B), (Belief:InductionPN)
//        B, A, time(raw), belief(negative), task("."), time(dtEventsOrEternals), neqAndCom(A,B),   notImpl(A) |- varIntro((--A ==>+- B)), (Belief:InductionPN)

//&&
    B, A, task("."), time(raw), time(dtEvents), notImpl(A),notImpl(B)                            |- (polarize(B,task) &&+- polarize(A,belief)), (Belief:IntersectionDepolarized)
        //B, A, task("."), time(raw), time(dtEvents), notImpl(A),notImpl(B)                            |- (B &&+- A), (Belief:Intersection)
    B, A, task("."), time(raw), time(dtEventsOrEternals), neqAndCom(A,B), notImpl(A),notImpl(B)   |- varIntro((polarize(B,task) &&+- polarize(A,belief))), (Belief:IntersectionDepolarized)
        //B, A, task("."), time(raw), time(dtEventsOrEternals), neqAndCom(A,B), notImpl(A),notImpl(B)  |- varIntro((B &&+- A)), (Belief:Intersection)



//    B, A, time(raw), task("."), time(dtEvents),                             notImpl(A),notImpl(B) |- (A ==>+- B), (Belief:Induction)
//    B, A, time(raw), task("."), time(dtEventsOrEternals), neqAndCom(A,B),     notImpl(A),notImpl(B) |- varIntro((A ==>+- B)), (Belief:Induction)
//        B, A, time(raw), task(negative), task("."), time(dtEvents),                          notImpl(A),notImpl(B) |- ((--,%A) ==>+- B), (Belief:InductionN)
//        B, A, time(raw), task(negative), task("."), time(dtEventsOrEternals), neqAndCom(A,B), notImpl(A),notImpl(B) |- varIntro(((--,%A) ==>+- B)), (Belief:InductionN)

//    B, A, time(raw), belief(positive), task("."), time(dtEvents),                                notImpl(B),notImpl(A) |- (B ==>+- A), (Belief:Abduction)
//    B, A, time(raw), belief(positive), task("."), time(dtEventsOrEternals), neqAndCom(A,B),       notImpl(A),notImpl(B) |- varIntro((B ==>+- A)), (Belief:Abduction)
//        B, A, time(raw), belief(negative), task("."), time(dtEvents),                            notImpl(B),notImpl(A) |- ((--,%B) ==>+- A), (Belief:AbductionPN)
//        B, A, time(raw), belief(negative), task("."), time(dtEventsOrEternals), neqAndCom(A,B),   notImpl(A),notImpl(B) |- varIntro(((--,%B) ==>+- A)), (Belief:AbductionPN)




//NAL3 difference
//    A, B, task("."), time(raw), neqRCom(A,B), time(dtEventsOrEternals) |- (A - B), (Belief:Difference)



    //S || P: //should be covered more accurataely by the above cases
    //S, P, time(raw), time(dtAfter), task("."), neqCom(P,S) |- (--,((--,%S) &&+- (--,%P))), (Belief:Union)
    //S, P, time(raw), time(dtEventsOrEternals), task("."), neqAndCom(P,S) |- (--,varIntro(((--,%S) &&+- (--,%P)))), (Belief:Union)


//backward temporal induction
//    (A ==> B), A, time(raw), time(decomposeTask), task("?") |- B, (Punctuation:Question)
//    ((--,%A) ==> B), A, time(raw), time(decomposeTask), task("?") |- B, (Punctuation:Question)
//    (A ==> B), B, time(raw), time(decomposeTask), task("?") |- A, (Punctuation:Question)
    //(A <=> B), A, time(raw), time(decomposeTask), task("?") |- B, (Punctuation:Question)
