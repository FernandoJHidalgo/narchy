//The rules of NAL, can be interpreted by considering the intiution behind the following two relations:
// Statement:                 (A --> B):               A can stand for B
// Statement about Statement: (A --> B) ==> (X --> Y): If A is true, so is/will be B
// --> is a relation in meaning of terms, while ==> is a relation of truth between statements.

//// similarity from inheritance ////////////////////////////////////////////////////////////////////////////////////
//If S is a special case of P, and P is a special case of S, then S and P are similar

    (S --> P), (P --> S) |- (S <-> P), (Belief:Intersection, Goal:Strong)

//// inheritance from similarty <- todo check why this one was missing ////////////////////////////////////////////////////////////////////////////////////

    (S <-> P), (P --> S) |- (S --> P), (Belief:ReduceConjunction, Goal:Strong)

//// inheritance-based syllogism ////////////////////////////////////////////////////////////////////////////////////
// If A is a special case of B, and B is a special case of C, so is A a special case of C (strong), the other variations are hypotheses (weak)
//       (A --> B) ------- (B --> C)
//            \               /
//             \             /
//              \           /
//               \         /
//                (A --> C)

//seems like only one of these needs permute backward. these generate a lot of questions so minimize them especially when redundant questions would be generated
    // the second neqRCom() is to handle the backwards cases until a proper variable transform is implemented for those auto-generated rules

    (A --> B), (B --> C), neqRCom(A,C), neqRCom(B,C) |- (A --> C), (Belief:Deduction, Goal:Strong, Permute:Backward)
    (A --> B), (A --> C), neqRCom(B,C), neqRCom(A,C) |- (C --> B), (Belief:Abduction, Goal:Weak, Permute:Backward)
    (A --> C), (B --> C), neqRCom(A,B) |- (A --> B), (Belief:Induction, Goal:Weak)
    (A --> B), (B --> C), neqRCom(A,C) |- (C --> A), (Belief:Exemplification, Goal:Weak)

//// similarity-based syllogism ////////////////////////////////////////////////////////////////////////////////////
//If P and S are a special case of M, then they might be similar (weak),
//also if P and S are a general case of M

    (P --> M), (S --> M), neqRCom(S,P) |- (P <-> S), (Belief:Comparison, Goal:Weak)
    (M --> P), (M --> S), neqRCom(S,P) |- (P <-> S), (Belief:Comparison, Goal:Weak)

//If M is a special case of P and S and M are similar, then S is also a special case of P (strong)

    (M --> P), (S <-> M), neqRCom(S,P) |- (S --> P), (Belief:Analogy, Goal:Strong)
    (P --> M), (S <-> M), neqRCom(S,P) |- (P --> S), (Belief:Analogy, Goal:Strong)
    (M <-> P), (S <-> M), neqRCom(S,P) |- (S <-> P), (Belief:Resemblance, Goal:Strong)
