//General Induction and Temporal Induction
//  When P and then S happened according to an observation, by induction (weak) it may be that alyways after P, usually S happens.

//TODO maybe allow equality in neqAndCom cases but only if the events differ in time

//==>
    A, B, time(raw), task(positive), task("."), time(dtEvents),                             notImplEqui(A), notImplEqui(B) |- (A ==>+- B), (Belief:Induction)
    A, B, time(raw), task(positive), task("."), time(dtEventsOrEternals), neqAndCom(A,B),     notImplEqui(A), notImplEqui(B) |- varIntro((A ==>+- B)), (Belief:Induction)
        A, B, time(raw), task(negative), task("."), time(dtEvents),                          notImplEqui(A), notImplEqui(B) |- ((--,%A) ==>+- B), (Belief:InductionN)
        A, B, time(raw), task(negative), task("."), time(dtEventsOrEternals), neqAndCom(A,B), notImplEqui(A), notImplEqui(B) |- varIntro(((--,%A) ==>+- B)), (Belief:InductionN)

    A, B, time(raw), belief(positive), task("."), time(dtEvents),                                notImplEqui(A), notImplEqui(B) |- (B ==>+- A), (Belief:Abduction)
    A, B, time(raw), belief(positive), task("."), time(dtEventsOrEternals), neqAndCom(A,B),       notImplEqui(A), notImplEqui(B) |- varIntro((B ==>+- A)), (Belief:Abduction)
        A, B, time(raw), belief(negative), task("."), time(dtEvents),                            notImplEqui(A), notImplEqui(B) |- ((--,%B) ==>+- A), (Belief:AbductionPN)
        A, B, time(raw), belief(negative), task("."), time(dtEventsOrEternals), neqAndCom(A,B),   notImplEqui(A), notImplEqui(B) |- varIntro(((--,%B) ==>+- A)), (Belief:AbductionPN)

//<=>
    A, B, task("."), time(raw), time(dtEvents), notImplEqui(A), notImplEqui(B) |- (polarize(A,task) <=>+- polarize(B,belief)), (Belief:ComparisonDepolarized)
    A, B, task("."), time(raw), time(dtEventsOrEternals), neqAndCom(A,B),        notImplEqui(A), notImplEqui(B) |- varIntro((polarize(A,task) <=>+- polarize(B,belief))), (Belief:ComparisonDepolarized)


//&&
    A, B, task("."), time(raw), time(dtEvents), notImplEqui(A), notImplEqui(B)                      |- (polarize(A,task) &&+- polarize(B,belief)), (Belief:IntersectionDepolarized)
    A, B, task("."), time(raw), time(dtEventsOrEternals), neqAndCom(A,B), notImplEqui(A), notImplEqui(B)   |- varIntro((polarize(A,task) &&+- polarize(B,belief))), (Belief:IntersectionDepolarized)





    //S || P: //should be covered more accurataely by the above cases
    //S, P, time(raw), time(dtAfter), task("."), neqCom(P,S) |- (--,((--,%S) &&+- (--,%P))), (Belief:Union)
    //S, P, time(raw), time(dtEventsOrEternals), task("."), neqAndCom(P,S) |- (--,varIntro(((--,%S) &&+- (--,%P)))), (Belief:Union)


//backward temporal induction
//    (A ==> B), A, time(raw), time(decomposeTask), task("?") |- B, (Punctuation:Question)
//    ((--,%A) ==> B), A, time(raw), time(decomposeTask), task("?") |- B, (Punctuation:Question)
//    (A ==> B), B, time(raw), time(decomposeTask), task("?") |- A, (Punctuation:Question)
    //(A <=> B), A, time(raw), time(decomposeTask), task("?") |- B, (Punctuation:Question)
