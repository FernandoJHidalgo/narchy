<?xml version="1.0"?>

<REDConfig>
	<Style id="Default">
		<FontFace>Monospaced</FontFace>
		<FontSize>12</FontSize>
		<FontStyle>plain</FontStyle>
		<Lining>none</Lining>
		<Foreground red="0" green="0" blue="0"/>
		<Background red="255" green="255" blue="255"/>
		<DisplayName>Default</DisplayName>
		<Description>The default style to be used as basis for other styles and when a style is not available.</Description>
	</Style>
	
<!--	Keyword Styles	-->
	<Style id="Keyword">
		<FontStyle>bold</FontStyle>
		<Super>Default</Super>
		<Description>Style for general purpose programming language keywords and as basis for specialized keyword styles.</Description>
	</Style>
	<Style id="KeywordLogic">
		<Super>Keyword</Super>
		<DisplayName>Logic</DisplayName>
		<Description>Style for keywords that perform logical operations like and, not, xor, etc. </Description>
	</Style>
	<Style id="KeywordModifier">
		<Foreground red="111" green="82" blue="76"/>
		<Super>Keyword</Super>
		<DisplayName>Modifier</DisplayName>
		<Description>Style for modifier keywords like public, protected, private, static, etc.</Description>
	</Style>
	<Style id="KeywordDataType">
		<Foreground red="71" green="106" blue="77"/>
		<Super>Keyword</Super>
		<DisplayName>Datatype</DisplayName>
		<Description>Style for language built-in, primitive datatypes, like int, float, boolean, etc.</Description>
	</Style>
	<Style id="KeywordControl">
		<Foreground red="87" green="87" blue="129"/>
		<Super>Keyword</Super>
		<DisplayName>Control flow</DisplayName>
		<Description>Style for keywords that control the program flow, like if, while, switch, etc.</Description>
	</Style>
	<Style id="KeywordStructures">
		<Super>Keyword</Super>
		<DisplayName>Structures</DisplayName>
		<Description>Style for keywords associated with user-defined datatypes, like class, namespace, union, etc.</Description>
	</Style>
	<Style id="KeywordCasts">
		<Super>Keyword</Super>
		<DisplayName>Casts</DisplayName>
		<Description>Style used for casting keywords, like const_cast, etc.</Description>
	</Style>

<!--	Literals	-->
	<Style id="Literal">
        <FontStyle>bold</FontStyle>
		<Super>Default</Super>
		<Description>This style is used as basis for specialized literal styles.</Description>
	</Style>
	<Style id="Character">
		<Foreground red="155" green="167" blue="20"/>
		<Super>Literal</Super>
		<Description>Style for single-character literals, like 'a'.</Description>
	</Style>
	<Style id="Integer">
		<Foreground red="77" green="87" blue="140"/>
		<Super>Literal</Super>
		<Description>Style for scalar literals, like 42.</Description>
	</Style>
	<Style id="Float">
		<Foreground red="9" green="113" blue="117"/>
		<Super>Literal</Super>
		<Description>Style for floating point literals, like 3.14</Description>
	</Style>
	<Style id="Boolean">
		<Foreground red="73" green="73" blue="73"/>
		<Super>Literal</Super>
		<Description>Style for boolean literals, like true or false.</Description>
	</Style>
	<Style id="String">
		<Foreground red="179" green="121" blue="6"/>
        <FontStyle>plain</FontStyle>
		<Super>Literal</Super>
		<Description>Style for multi-character literals, like "Wind River"</Description>
	</Style>
	<Style id="StringQuoted">
        <Foreground red="220" green="97" blue="90"/>
        <FontStyle>bold</FontStyle>
		<Super>String</Super>
		<DisplayName>String Quotations</DisplayName>
		<Description>Style for quotations in strings, like \", \n, etc.</Description>
	</Style>
	
	<Style id="Preprocessor">
        <FontStyle>bold</FontStyle>
		<Super>Default</Super>
		<Description>Style for preprocessor related text, like #define or #include.</Description>
	</Style>
	
	<Style id="Comment">
        <Foreground red="35" green="25" blue="177"/>
		<Super>Default</Super>
		<Description>Style used for comments</Description>
	</Style>
	
	<Style id="CommentJavadoc">
		<Foreground red="74" green="22" blue="158"/>
		<Super>Comment</Super>
		<DisplayName>Javadoc</DisplayName>
		<Description>Style used for Javadoc (and similar tools) comments.</Description>
	</Style>
	
	<Style id="JavadocTag">
		<FontStyle>bold</FontStyle>
		<Lining>singleunder</Lining>
		<Super>CommentJavadoc</Super>
		<DisplayName>Javadoc Tag</DisplayName>
		<Description>Style used for tags in Javadoc (and similar tools) comments.</Description>
	</Style>
	
<!--	Special styles-->
	<Style id="BracketMatcher">
		<Foreground red="255" green="255" blue="255"/>
		<Background red="90" green="0" blue="30"/>
		<FontStyle>bold</FontStyle>
		<Super>Default</Super>
		<DisplayName>Bracket Matcher</DisplayName>
		<Description>Style used to highlight matching brackets with the bracket matcher plugin.</Description>
	</Style>

	<Style id="Build">
		<FontStyle>bold</FontStyle>
		<Super>Default</Super>
		<Description>Default Style for Builder output</Description>
	</Style>

	<Style id="BuildInfo">
		<Foreground red="30" green="90" blue="200"/>
		<Super>Build</Super>
		<Description>Style for Builder run status output</Description>
	</Style>

	<Style id="BuildInfoMake">
		<Foreground red="70" green="105" blue="130"/>
		<FontStyle>plain</FontStyle>
		<Super>Build</Super>
		<Description>Style for Builder info output</Description>
	</Style>

	<Style id="BuildInfoDirectory">
		<Foreground red="0" green="150" blue="0"/>
		<Super>Build</Super>
		<Description>Style for Builder info output</Description>
	</Style>

	<Style id="BuildInfoFile">
		<Foreground red="85" green="130" blue="150"/>
		<FontStyle>plain</FontStyle>
		<Super>Build</Super>
		<Description>Style for Builder info output</Description>
	</Style>

	<Style id="BuildError">
		<FontStyle>italic</FontStyle>
		<Foreground red="255" green="0" blue="0"/>
		<Super>Build</Super>
		<Description>Style for Builder info output</Description>
	</Style>

</REDConfig>
